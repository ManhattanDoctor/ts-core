@import '~@angular/material/theming';

/*--------------------------------------------------------------------------
//
//  Methods
//
//-------------------------------------------------------------------------*/

@mixin vi-mat-core-ng2-smart-table($typography) {
    $padding: 1rem !important;

    ng2-smart-table {
        display: block;

        &::ng-deep {
        // /deep/ {
            .column-xs {
                @include vi-mat-core-ng2-smart-table-column(50px);
            }

            .column-s {
                @include vi-mat-core-ng2-smart-table-column(75px);
            }

            .column-xm {
                @include vi-mat-core-ng2-smart-table-column(100px);
            }

            .column-m {
                @include vi-mat-core-ng2-smart-table-column(125px);
            }

            .column-xl {
                @include vi-mat-core-ng2-smart-table-column(150px);
            }

            .column-l {
                @include vi-mat-core-ng2-smart-table-column(175px);
            }
        }
    }

    table tr th,
    table tr th a {
        @include mat-typography-level-to-styles($typography, body-2);
    }

    table tr td {
        @include mat-typography-level-to-styles($typography, body-1);
    }

    table tr th,
    table tr td {
        position: relative;
        padding: $padding;
        border: 1px solid;
        vertical-align: middle;
    }

    .ng2-smart-titles {
        th {
            padding: $padding;
            @include nb-ltr(padding-right, 1.75rem);
            @include nb-rtl(padding-left, 1.75rem);
        }

        .ng2-smart-sort-link {
            &.sort.asc, &.sort.desc {
                font-weight: mat-font-weight($typography, body-2);

                &::after {
                    @include nb-ltr(right, 0.75rem);
                    @include nb-rtl(left, 0.75rem);
                    border-width: 0.375rem;
                    position: absolute;
                    margin: 0;
                    top: 50%;
                    margin-left: 4px;
                    transform: translate(0, -50%);
                }

                &.desc::after {
                    transform: translate(0, -50%) rotate(180deg);
                }
            }
        }
    }

    thead tr {
        &.ng2-smart-filters th {
            padding: $padding;

            .ng2-smart-filter input {
                line-height: mat-line-height($typography, body-1)
            }
        }
    }

    // Actions
    th.ng2-smart-actions-title-add {
        a {
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.75rem !important;
            padding: $padding;
            border-radius: 0.375rem;

            &:hover {
                text-decoration: none;
            }
        }
    }

    .ng2-smart-actions {
        padding: 0;
        // fix for 100% height child
        height: 1px;

        ng2-st-tbody-edit-delete, ng2-st-tbody-create-cancel, ng2-st-actions {
            display: flex;
            height: 100%;
        }

        a.ng2-smart-action {
            display: flex;
            align-items: center;
            justify-content: center;
            height: 100%;
            width: 100%;

            font-size: 2rem !important;

            &:not(:last-child) {
                border-right: 1px solid;
            }

            &:hover {
                text-decoration: none;
            }
        }
    }

    // TODO: remove this hack, when it will be possible to identify the whole row in the edit state
    table-cell-edit-mode {
        display: block;
        margin: -7.5px -12px;
    }

    ng2-smart-table-pager {
        justify-content: center !important;
    }

    //Paging
    .ng2-smart-pagination-nav {
        display: flex;
        justify-content: center;
        margin-top: $padding;

        .ng2-smart-pagination {
            display: flex;
            padding: 0;
            margin: 0;
        }

        .pagination {
            @include mat-typography-level-to-styles($typography, body-1);
            border: 1px solid;
            border-radius: 4px;

            .page-item {
                &:last-child {
                    .page-link {
                        @include nb-ltr() {
                            border-top-right-radius: 4px;
                            border-bottom-right-radius: 4px;
                        };
                        @include nb-rtl() {
                            border-top-left-radius: 4px;
                            border-bottom-left-radius: 4px;
                        };
                    }
                }
                &:not(:last-child) {
                    @include nb-ltr(border-right, 1px solid);
                    @include nb-rtl(border-left, 1px solid);
                }

                &:first-child {
                    .page-link {
                        @include nb-ltr() {
                            border-top-left-radius: 4px;
                            border-bottom-left-radius: 4px;
                        };
                        @include nb-rtl() {
                            border-top-right-radius: 4px;
                            border-bottom-right-radius: 4px;
                        };
                    }
                }

                &.active {
                    .page-link {
                        font-weight: mat-font-weight($typography, body-2);
                    }
                }

                .page-link {
                    @include mat-typography-level-to-styles($typography, body-1);
                    background: transparent;
                    border: none;
                    padding: 0.75rem 1.25rem;
                    border: none;

                    &:hover {
                        text-decoration: none;
                    }
                }

                .page-link-prev,
                .page-link-next {
                    font-size: mat-font-size($typography, body-1) !important;
                }

            }

        }
    }
}

@mixin vi-mat-theme-ng2-smart-table($theme, $text-primary-default, $text-accent-default) {
    $warn: map-get($theme, warn);
    $accent: map-get($theme, accent);
    $primary: map-get($theme, primary);
    $is-dark: map-get($theme, is-dark);
    $background: map-get($theme, background);
    $foreground: map-get($theme, foreground);

    $text-accent: mat-color($accent, $text-accent-default);
    $text-primary: mat-color($primary, $text-primary-default);
    @if $is-dark {
        $text-accent: mat-color($accent);
        $text-primary: mat-color($primary);
    }

    color: map-get($foreground, text);
    background-color: map-get($background, card);

    table tr th,
    table tr th a {
        // color: map-get($foreground, text);
    }

    table tr td {
        // color: map-get($foreground, text);
    }

    table tr th,
    table tr td {
        border-color: map-get($foreground, divider);
    }

    .ng2-smart-titles {
        .ng2-smart-sort-link {
            color: $text-primary;

            &.sort.asc, &.sort.desc {
                &::after {
                    border-bottom-color: $text-primary;
                }
            }
        }
    }

    thead tr {
        // background: nb-theme(smart-table-header-bg);
    }

    tbody tr {
        &.selected, &:hover {
            background: map-get($background, hover) !important;
        }

        &:nth-child(2n) {
            background-color: map-get($background, row-hover);
        }
    }

    // Actions
    th.ng2-smart-actions-title-add {
        a {
            // background: nb-theme(color-success-500);
            // color: #ffffff;
        }
    }

    .ng2-smart-actions {
        a.ng2-smart-action {
            // color: nb-theme(smart-table-fg-secondary);

            &:not(:last-child) {
                // border-color: nb-theme(smart-table-separator);
            }
        }

        .ng2-smart-action-add-create:hover,
        .ng2-smart-action-edit-edit:hover,
        .ng2-smart-action-edit-save:hover {
            // color: nb-theme(color-success-500);
        }

        .ng2-smart-action-add-cancel:hover,
        .ng2-smart-action-delete-delete:hover,
        .ng2-smart-action-edit-cancel:hover {
            // color: nb-theme(color-danger-500);
        }
    }

    //Paging
    nav.ng2-smart-pagination-nav {
        .ng2-smart-pagination {
            .page-item.disabled .page-link, .page-item.disabled .page-link:focus, .page-item.disabled .page-link:hover {
                color: map-get($foreground, secondary-text);
            }
        }

        .pagination {
            border-color: map-get($foreground, divider);

            .page-item {
                &:not(:last-child) {
                    @include nb-ltr(border-color, map-get($foreground, divider));
                    @include nb-rtl(border-color, map-get($foreground, divider));
                }

                &:not(.active):not(.disabled) {
                    &:hover {
                        background: map-get($background, hover);
                        .page-link {
                            color: $text-primary;
                        }
                    }
                }
         
                .page-link {
                    color: map-get($foreground, text);
                    &:hover {
                        color: $text-primary;
                    }
                }
        
                &.active {
                    background: map-get($background, hover);
                    .page-link {
                        color: $text-primary;
                        cursor: default;
                    }
                }

            }
        }
    }
}

@mixin vi-mat-core-ng2-smart-table-column($width) {
    width: $width;
    @include text-one-line();

    .ng2-smart-title {
        width: $width;
        @include text-one-line();
    }
}


@mixin nb-ltr($prop: null, $value: null) {
    @include _prepend-with-selector('[dir=ltr]', $prop, $value) {
        @content;
    }
}
@mixin nb-rtl($prop: null, $value: null) {
    @include _prepend-with-selector('[dir=rtl]', $prop, $value) {
        @content;
    };
}
@mixin _prepend-with-selector($selector, $prop: null, $value: null) {
    #{$selector} & {
        @if $prop != null {
        #{$prop}: $value;
        }
        @content;
    }
}